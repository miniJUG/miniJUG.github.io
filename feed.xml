<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>miniJUG</title>
  <link rel="alternate" type="text/html" href="https://minijug.ru" />
  <subtitle type="text">Новости Java</subtitle>
  <id>https://minijug.ru/feed.xml</id>
  <updated>2021-08-29T17:00:00Z</updated>
  <entry>
    <title>Новости Java #27</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_27.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_27.html</id>
    <updated>2021-08-29T17:00:00Z</updated>
    <published>2021-08-29T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Стали известны первые два JEP'а, которые попадут в Java 18:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/400"&gt;JEP 400: UTF-8 by Default&lt;/a&gt;. В нём предлагается сделать UTF-8 кодировкой по умолчанию на всех платформах. Про него мы писали в &lt;a href="java_news_10.html"&gt;выпуске #10&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/413"&gt;JEP 413: Code Snippets in Java API Documentation&lt;/a&gt;. В этом JEP предлагается ввести новый тег &lt;code&gt;@snippet&lt;/code&gt;, помощью которого можно будет вставлять в javadoc примеры кода. Про него мы писали в &lt;a href="java_news_5.html"&gt;выпуске #5&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; В IntelliJ IDEA появилась базовая поддержка Java 17. В &lt;a href="https://blog.jetbrains.com/idea/2021/08/intellij-idea-2021-2-1/"&gt;новой версии 2021.2.1&lt;/a&gt; теперь есть новый уровень языка "17 - Sealed types, always-strict floating-point semantics", а также "17 (Preview) - Pattern matching for switch", включив который, можно попробовать &lt;a href="https://openjdk.java.net/jeps/406"&gt;новую preview конструкцию языка&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Завершились голосования за создание проектов &lt;a href="https://mail.openjdk.java.net/pipermail/announce/2021-August/000306.html"&gt;Wakefield&lt;/a&gt; и &lt;a href="https://mail.openjdk.java.net/pipermail/announce/2021-August/000307.html"&gt;CRaC&lt;/a&gt;. Теперь лидеры могут официально стартовать проекты.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; JUGNsk выложил &lt;a href="https://www.youtube.com/playlist?list=PLecWId-JT7S5cqUiY7ixWcZgjdRV4upnw"&gt;видеозаписи докладов&lt;/a&gt; с февральской конференции SnowOne 2021.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://micronaut.io/2021/08/18/micronaut-framework-3-released/"&gt;Micronaut 3&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://docs.gradle.org/7.2/release-notes.html"&gt;Gradle 7.2&lt;/a&gt;.&lt;/p&gt;

&lt;h4 class="pt-2"&gt;Полезняшки&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/TravaOpenJDK/trava-jdk-11-dcevm"&gt;TravaOpenJDK11&lt;/a&gt; &amp;ndash; модификация OpenJDK 11 с улучшенной возможностью переопределения загруженных классов во время выполнения. Является продолжением проекта &lt;a href="https://ssw.jku.at/dcevm/"&gt;DCEVM&lt;/a&gt;. Если в обычной версии HotSpot механизм hotswap позволяет изменять только тела методов, то в DCEVM можно добавлять и удалять поля и методы, не перезапуская JVM.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/gaul/modernizer-maven-plugin"&gt;Modernizer Maven Plugin&lt;/a&gt; &amp;ndash; плагин для Maven, который ищет в проекте использования legacy API. При нахождении таких API плагин предлагает современную альтернативу (например, &lt;code&gt;java.util.Objects.equal()&lt;/code&gt; вместо &lt;code&gt;com.google.common.base.Objects.equal()&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/atp-mipt/ljv"&gt;Lightweight Java Visualizer&lt;/a&gt; &amp;ndash; библиотека, которая парсит Java-объект с помощью рефлексии, строит граф и визуализирует его с помощью Graphviz. Очень удобно, когда нужно быстро понять, как устроена та или иная структура данных.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #26</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_26.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_26.html</id>
    <updated>2021-08-14T17:00:00Z</updated>
    <published>2021-08-14T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Вышел первый &lt;a href="https://mail.openjdk.java.net/pipermail/jdk-dev/2021-August/005906.html"&gt;релиз-кандидат JDK 17&lt;/a&gt;. Им стала сборка JDK 17+35.&lt;/p&gt;
&lt;p&gt;Также вышла ранняя сборка &lt;a href="http://jdk.java.net/18/"&gt;JDK 18+10&lt;/a&gt;. Кроме того, появилось обновление Loom: &lt;a href="https://jdk.java.net/loom/"&gt;JDK 18-loom+2&lt;/a&gt;. Список архитектур, поддерживаемых Loom, пополнился AArch64.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышло два новых JEP:&lt;/p&gt;
&lt;p&gt;Первый &amp;ndash; &lt;a href="https://openjdk.java.net/jeps/416"&gt;JEP 416: Reimplement Core Reflection with Method Handles&lt;/a&gt;. Про него мы писали в &lt;a href="java_news_18.html"&gt;выпуске 18&lt;/a&gt;, когда был опубликован его черновик.&lt;/p&gt;
&lt;p&gt;Второй &amp;ndash; &lt;a href="https://openjdk.java.net/jeps/417"&gt;JEP 417: Vector API (Third Incubator)&lt;/a&gt;. Это уже третья итерация Vector API в Java. &lt;a href="https://openjdk.java.net/jeps/338"&gt;Первая&lt;/a&gt; попала в Java 16, &lt;a href="https://openjdk.java.net/jeps/414"&gt;вторая&lt;/a&gt; &amp;ndash; в Java 17. Таким образом, третья должна попасть в &lt;a href="http://openjdk.java.net/projects/jdk/18/"&gt;Java 18&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; В рассылке OpenJDK &lt;a href="https://mail.openjdk.java.net/pipermail/announce/2021-August/000305.html"&gt;объявлено голосование&lt;/a&gt; по созданию нового проекта JDK под именем Wakefield. Целью этого проекта будет поддержка в Java сервера дисплея &lt;a href="https://ru.wikipedia.org/wiki/Wayland"&gt;Wayland&lt;/a&gt; в Linux, который создан для полной замены устаревшего X11. Лидером проекта предложил себя Фил Рэйс из Oracle.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Переход AdoptOpenJDK в проект Eclipse Adoptium &lt;a href="https://blog.adoptopenjdk.net/2021/08/goodbye-adoptopenjdk-hello-adoptium/"&gt;полностью завершён&lt;/a&gt;. Теперь скачивать сборки OpenJDK (которые теперь называются Eclipse Temurin) рекомендуется с сайта &lt;a href="https://adoptium.net/"&gt;adoptium.net&lt;/a&gt;. При этом сайт &lt;a href="https://adoptopenjdk.net/"&gt;AdoptOpenJDK&lt;/a&gt; и его API будут ещё какое-то время функционировать.&lt;/p&gt;
&lt;p&gt;Сборки OpenJ9 не будут предоставляться Adoptium, поэтому их нужно скачивать с &lt;a href="https://developer.ibm.com/languages/java/semeru-runtimes/"&gt;сайта IBM&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Опубликован &lt;a href="https://redmonk.com/sogrady/2021/08/05/language-rankings-6-21/"&gt;RedMonk Programming Languages Rankings&lt;/a&gt; за 2021 год. В этом рейтинге популярность языков программирования вычисляется на основе метрик, собранных с GitHub и StackOverflow. В этом году ничего кардинального для Java и других JVM-языков не произошло: популярность Java немного возросла, и она стала делить второе место с Python (в прошлом году Python и Java занимали второе и третье место соответственно), а Scala, Kotlin и Groovy остались приблизительно на своих местах.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://maven.apache.org/download.cgi"&gt;Apache Maven 3.8.2&lt;/a&gt;. Список изменений можно посмотреть &lt;a href="https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12316922&amp;version=12349965"&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://mail.openjdk.java.net/pipermail/jmh-dev/2021-August/003355.html"&gt;JMH 1.33&lt;/a&gt;.&lt;/p&gt;

&lt;h4 class="pt-2"&gt;Полезняшки&lt;/h4&gt;
&lt;p&gt;Чтобы выпуски новостей сделать более занимательными, я решил открыть новую рубрику &amp;laquo;Полезняшки&amp;raquo;, где я буду выкладывать по несколько ссылок на интересные инструменты, библиотеки, фреймворки, которые могут оказаться полезными для разработчиков на Java или других JVM-языках.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;a href="https://github.com/Col-E/Recaf"&gt;Recaf&lt;/a&gt; &amp;ndash; программа просмотра class-/jar-файлов с возможностью редактирования байткода и его сохранения.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://jqwik.net/"&gt;jqwik&lt;/a&gt; &amp;ndash; библиотека для тестирования на основе свойств (property-based testing). Название намекает на отсылку к &lt;a href="https://en.wikipedia.org/wiki/QuickCheck"&gt;QuickCheck&lt;/a&gt;, оригинальной библиотеке на Haskell для написания тестов на основе свойств.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://github.com/linkedin/URL-Detector"&gt;URL-Detector&lt;/a&gt; &amp;ndash; библиотека для поиска URL в строках. Написана командой безопасности LinkedIn.&lt;/li&gt;
&lt;/ol&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #25</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_25.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_25.html</id>
    <updated>2021-08-02T17:00:00Z</updated>
    <published>2021-08-02T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Главное событие этой недели &amp;ndash; &lt;a href="https://www.jetbrains.com/idea/whatsnew/"&gt;выход IntelliJ IDEA 2021.2&lt;/a&gt;, в которой появилось много нового. Перечислим ключевые изменения:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Project-wide анализ проектов на Java. Во вкладке Problems появилась кнопка Enable Project-Wide Analysis, которая включает живую проверку ошибок во всём проекте. При этом проекту для отображения ошибок даже не потребуется компиляция. Новшество доступно только в IntelliJ IDEA Ultimate.&lt;/li&gt;
  &lt;li&gt;Действия при сохранении. В настройках IDEA теперь есть вкладка Tools → Actions on Save, позволяющая включать действия, которые будут выполняться при сохранении: Reformat Code, Optimize imports, Rearrange code, Run code cleanup и Build project.&lt;/li&gt;
  &lt;li&gt;Новое UI для управления зависимостями Maven и Gradle. В IDEA теперь есть вкладка Dependencies, в которой можно искать зависимости по имени. При нажатии кнопки Add IDEA сама пропишет указанную зависимость в pom.xml или build.gradle.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Новшества, относящиеся непосредственно к Java: более точные и подробные описания инспекций, возможность назначить различные цвета подсветки модификаторов видимости (&lt;code&gt;private&lt;/code&gt;/&lt;code&gt;protected&lt;/code&gt;/&lt;code&gt;public&lt;/code&gt;), новый wizard для создания проектов на JavaFX, а также &lt;a href="https://blog.jetbrains.com/idea/2021/06/intellij-idea-2021-2-eap-4/#java"&gt;новые инспекции&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Антон Козлов из Azul объявил в рассылке OpenJDK &lt;a href="https://mail.openjdk.java.net/pipermail/announce/2021-July/000304.html"&gt;голосование по созданию проекту CRaC&lt;/a&gt; (Coordinated Restore at Checkpoint).&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Брайан Гётц &lt;a href="https://mail.openjdk.java.net/pipermail/amber-spec-experts/2021-July/003052.html"&gt;предложил&lt;/a&gt; добавить в Java возможность объявлять анонимные классы с произвольным количеством интерфейсов. Сейчас в Java анонимный класс может иметь только одного родителя:&lt;/p&gt;
&lt;pre&gt;&lt;span style="color: blue"&gt;var&lt;/span&gt; foo = &lt;span style="color: blue"&gt;new&lt;/span&gt; AbstractFoo(args);&lt;/pre&gt;
&lt;p&gt;Брайан предлагает расширить синтаксис, позволив указывать дополнительные интерфейсы с помощью оператора &lt;code&gt;&amp;amp;&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;span style="color: blue"&gt;var&lt;/span&gt; foo = &lt;span style="color: blue"&gt;new&lt;/span&gt; AbstractFoo(args) &amp; RedFoo;&lt;/pre&gt;
&lt;p&gt;Такое улучшение сократит пробел между анонимными классами и лямбдами, которые всегда позволяли указывать пересечение:&lt;/p&gt;
&lt;pre&gt;&lt;span style="color: blue"&gt;var&lt;/span&gt; lambda = (Runnable &amp; Serializable) () -&gt; {
    &lt;span style="color: green"&gt;// ...&lt;/span&gt;
};&lt;/pre&gt;
&lt;p&gt;Сейчас для рефакторинга такой лямбды в класс неизбежно придётся завести именованный класс. Если идея Брайана будет реализована, то лямбду можно будет легко сконвертировать в анонимный класс.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://android-developers.googleblog.com/2021/07/jetpack-compose-announcement.html"&gt;Jetpack Compose 1.0&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышла &lt;a href="https://cassandra.apache.org/_/blog/Apache-Cassandra-4.0-is-Here.html"&gt;Apache Cassandra 4.0&lt;/a&gt;. Новая мажорная версия распределённой СУБД стала доступной спустя почти 6 лет после выхода версии 3.0.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #24</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_24.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_24.html</id>
    <updated>2021-07-26T17:00:00Z</updated>
    <published>2021-07-26T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Вышли обновления JDK:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://www.oracle.com/java/technologies/javase/16-0-2-relnotes.html"&gt;JDK 16.0.2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2021-July/006956.html"&gt;JDK 15.0.4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2021-July/006955.html"&gt;JDK 13.0.8&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mail.openjdk.java.net/pipermail/jdk-updates-dev/2021-July/006954.html"&gt;JDK 11.0.12&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://mail.openjdk.java.net/pipermail/jdk8u-dev/2021-July/014118.html"&gt;JDK 8u302&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jdk.java.net/17/"&gt;JDK 17-ea+32&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="http://jdk.java.net/18/"&gt;JDK 18-ea+7&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел черновик &lt;a href="https://openjdk.java.net/jeps/8263693"&gt;JEP: InetAddress host name and address lookup service provider interface&lt;/a&gt;. В этом JEP предлагается добавить новый провайдер сервиса, который позволит кастомизировать получение IP-адреса по имени хоста (и наоборот). Сейчас в Java резолвинг выполняется только нативно, то есть делегированием операции системе. Это сильно усложняет задачу, если требуется альтернативный механизм резолвинга, например, более производительный, чем системный, или использующийся в других DNS-протоколах, таких как DNS-over-QUIC. Также это может быть полезно в тестировании, где часто нужно подменять IP-адреса или имена хостов.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Azul предложил в рассылке OpenJDK &lt;a href="https://mail.openjdk.java.net/pipermail/discuss/2021-July/005862.html"&gt;новый проект CRaC&lt;/a&gt; (Coordinated Restore at Checkpoint), целью которого будет создание нового Java API, которое позволит сохранять состояние Java-рантайма, а затем его быстро восстанавливать, минуя фазу долгого старта и прогрева. Такая идея впервые была презентована ещё два года назад на JVM Language Summit 2019. Сейчас проект находится в статусе &lt;a href="https://openjdk.java.net/projects/#new-project"&gt;предварительной дискуссии&lt;/a&gt;. Следующим шагом будет официальное предложение по созданию проекта с последующим голосованием. Лидером проекта предлагается Антон Козлов из Azul.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Языку Kotlin &lt;a href="https://twitter.com/kotlin/status/1417188498667446272"&gt;исполнилось 10 лет&lt;/a&gt;. Проект Kotlin впервые был публично анонсирован JetBrains 22 июля 2011 года. Тогда Дмитрий Жемеров заявил: &amp;laquo;Мы посмотрели на все существующие языки JVM и выяснили, что  ни один из них не отвечает нашим требованиям. У Scala хороший набор фич, но её самый очевидный недостаток &amp;ndash; очень медленная компиляция&amp;raquo;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышла &lt;a href="https://medium.com/graalvm/graalvm-21-2-ee2cce3b57aa"&gt;GraalVM 21.2&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #23</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_23.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_23.html</id>
    <updated>2021-07-17T17:00:00Z</updated>
    <published>2021-07-17T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; JDK 17 перешла во &lt;a href="https://mail.openjdk.java.net/pipermail/jdk-dev/2021-July/005758.html"&gt;вторую фазу Rampdown&lt;/a&gt;. Теперь в релиз могут приниматься только критические баги с приоритетом P1 или P2.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; В рассылке OpenJDK начата &lt;a href="https://mail.openjdk.java.net/pipermail/discuss/2021-July/005846.html"&gt;предварительная дискуссия&lt;/a&gt; по созданию проекта, целью которого будет поддержка в Java сервера дисплея Wayland в Linux. &lt;a href="https://ru.wikipedia.org/wiki/Wayland"&gt;Wayland&lt;/a&gt; является современной заменой сервера X11 и уже включён по умолчанию в некоторых дистрибутивах, например &lt;a href="https://www.opennet.ru/opennews/art.shtml?num=54481"&gt;Ubuntu 21.04&lt;/a&gt; и &lt;a href="https://www.opennet.ru/opennews/art.shtml?num=50644"&gt;RHEL 8&lt;/a&gt;. Так как Linux с графическим интерфейсом является популярным выбором многих разработчиков Java, поддержка Wayland будет иметь большую важность для них.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Компания JetBrains выпустила свой ежегодный отчёт &lt;a href="https://blog.jetbrains.com/blog/2021/07/16/the-state-of-developer-ecosystem-2021/"&gt;&amp;laquo;Состояние экосистемы разработки&amp;raquo;&lt;/a&gt;. В этом году в опросе участвовало более 30 тысяч разработчиков из 183 стран. Перечислим некоторые интересные результаты:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Самый популярный язык &amp;ndash; JavaScript. Его использовали 69% опрошенных в течение последних 12 месяцев (Java использовали 49%). Также он является и самым популярным в качестве основного языка разработки (39% против 32% у Java).&lt;/li&gt;
  &lt;li&gt;Kotlin пока что не попадает в первую десятку, однако имеет неплохой результат: с точки зрения общей распространённости он на 13-м месте (14%), а в как основной язык &amp;ndash; на 11-м (7%). Также Kotlin является самым желаемым языком для перехода с Java: в ближайшие 12 месяцев на него хотят перейти 13% разработчиков Java. Кроме того, Kotlin в пятёрке желаемых для перехода со всех языков (вместе с Go, TypeScript, Python и Rust).&lt;/li&gt;
  &lt;li&gt;Популярность Scala падает уже третий год подряд: в 2019 её использовали 6%, в 2020 &amp;ndash; 5%, в 2021 &amp;ndash; 3%.&lt;/li&gt;
  &lt;li&gt;Количество сотрудников, работающих удалённо, возрасло с 20% (в начале 2020) до 70%.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://quarkus.io/blog/quarkus-2-0-0-final-released/"&gt;Quarkus 2.0&lt;/a&gt;. В новой версии был осуществлён переход на JDK 11, Vert.x 4, Eclipse MicroProfile 4, GraalVM 21.1, а также внесено множество других изменений. Также пока готовился этот недельный выпуск, вышли багфикс-релизы &lt;a href="https://quarkus.io/blog/quarkus-2-0-1-final-released/"&gt;2.0.1&lt;/a&gt; и &lt;a href="https://quarkus.io/blog/quarkus-2-0-2-final-released/"&gt;2.0.2&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://www.sonarqube.org/sonarqube-9-0/"&gt;SonarQube 9.0&lt;/a&gt; с поддержкой Bitbucket Cloud, GitHub Actions, C++ 20, Java 16, более точно анализа и многого другого.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://blog.jetbrains.com/blog/2021/07/15/new-tool-pages-improved-performance-refreshed-ui-and-more-in-toolbox-app-1-21/"&gt;JetBrains ToolBox 1.21&lt;/a&gt;. Это первый релиз ToolBox, который написан полностью на чистом Kotlin, с использованием фреймворка &lt;a href="https://www.jetbrains.com/lp/compose/"&gt;Compose for Desktop&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышли новые версии Spring:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/07/14/spring-framework-5-3-9-and-5-2-16-available-now"&gt;Spring Framework 5.3.9 и 5.2.16&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Spring Boot &lt;a href="https://spring.io/blog/2021/06/24/spring-boot-2-5-2-is-now-available"&gt;2.5.2&lt;/a&gt; и &lt;a href="https://spring.io/blog/2021/06/24/spring-boot-2-4-8-is-now-available"&gt;2.4.8&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/06/22/spring-security-5-5-1-5-4-7-5-3-10-and-5-2-11-released"&gt;Spring Security 5.5.1, 5.4.7, 5.3.10 и 5.2.11&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/06/14/spring-native-0-10-0-available-now"&gt;Spring Native 0.10.0&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/06/22/spring-data-2021-0-2-and-2020-0-10-released"&gt;Spring Data 2021.0.2 и 2020.0.10&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/06/25/spring-integration-zip-2-0-0-available"&gt;Spring Integration Zip 2.0.0&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/07/09/spring-authorization-server-0-1-2-available-now"&gt;Spring Authorization Server 0.1.2&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://mail.openjdk.java.net/pipermail/nashorn-dev/2021-July/007639.html"&gt;Nashorn 15.3&lt;/a&gt; с поддержкой Java 17.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #22</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_22.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_22.html</id>
    <updated>2021-06-27T17:00:00Z</updated>
    <published>2021-06-27T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Вышел &lt;a href="https://www.eclipse.org/eclipse/news/4.20/"&gt;Eclipse 2021-06&lt;/a&gt;. Что нового появилось в новой версии:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Языковая поддержка Java 16: &lt;a href="https://openjdk.java.net/jeps/394"&gt;паттерн-матчинг для &lt;code&gt;instanceof&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://openjdk.java.net/jeps/395"&gt;записи&lt;/a&gt; и &lt;a href="https://openjdk.java.net/jeps/397"&gt;&lt;code&gt;sealed&lt;/code&gt;-классы (preview)&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Новый quick fix для объявления переменной в цикле &lt;code&gt;foreach&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;12 новых действий clean up.&lt;/li&gt;
  &lt;li&gt;Отображение значения полей в цепочке при отладке, то есть при наведении на &lt;code&gt;b&lt;/code&gt; или &lt;code&gt;c&lt;/code&gt; в &lt;code&gt;a.b.c&lt;/code&gt; показывается значение &lt;code&gt;b&lt;/code&gt; или &lt;code&gt;c&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;А также общие улучшения в IDE, плагине для Git и в других подсистемах.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; В 2021 году разработчики впервые стали больше использовать Java 11, чем Java 8. Такими данными поделилась компания Snyk в своём ежегодном отчёте &lt;a href="https://foojay.io/today/new-jvm-ecosystem-report-2021-has-arrived/"&gt;"JVM Ecosystem Survey" за 2021 год&lt;/a&gt;. Snyk проводила опрос совместно с Azul с февраля по март 2021 года среди более чем 2 тысяч разработчиков Java.&lt;/p&gt;
&lt;p&gt;Как показывают результаты опроса, в продуктовых окружениях Java 11 использует 61.5% респондентов, что на 1.6% больше, чем Java 8. При этом последние версии Java (14 и 15 на момент опроса) имеют цифры 4.9% и 11.7% соответственно. Это существенно больше, чем постепенно уходящие в небытие Java 6 и 7, которые имеют всего 1.9% и 3.8%.&lt;/p&gt;
&lt;p&gt;В разработке же новые версии имеют ещё большую популярность: Java 11 использует 64.3% респондентов против 50.1% у Java 8. Java 15 использует 25.6% опрошенных.&lt;/p&gt;
&lt;p&gt;В отчёте также присутствует множество других интересных данных, например:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Наиболее популярный дистрибутив JDK &amp;ndash; AdoptOpenJDK (44.1%). Второе место у Oracle OpenJDK (28%).&lt;/li&gt;
  &lt;li&gt;Kotlin &amp;ndash; второй популярный язык после Java (17.7% и 91% соответственно). Groovy использует 13% опрошенных.&lt;/li&gt;
  &lt;li&gt;IntelliJ IDEA &amp;ndash; с большим отрывом самая популярная IDE (71.6%). Следующий идёт Eclipse, у которого всего 24.6%.&lt;/li&gt;
  &lt;li&gt;Среди билд-систем больше всего используется Maven (76.2%). У Gradle цифра более скромная &amp;ndash; 38.1%.&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; Из Java окончательно &lt;a href="https://github.com/openjdk/jdk/pull/4522"&gt;удалили код&lt;/a&gt;, отвечающий за biased locking. Ранее в Java 15 biased locking был &lt;a href="https://openjdk.java.net/jeps/374"&gt;отключен по умолчанию&lt;/a&gt; и стал deprecated. Сейчас же он удалён окончательно, и с Java 18 опция -XX:+UseBiasedLocking станет несуществующей.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышли новые ранние сборки JDK: &lt;a href="http://jdk.java.net/17/"&gt;JDK 17-ea+28&lt;/a&gt; и &lt;a href="http://jdk.java.net/18/"&gt;JDK 18-ea+3&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://mail.openjdk.java.net/pipermail/core-libs-dev/2021-June/079414.html"&gt;ASM 9.2&lt;/a&gt; с поддержкой Java 18.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://www.wildfly.org/news/2021/06/17/WildFly24-Final-Released/"&gt;WildFly 24&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #21</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_21.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_21.html</id>
    <updated>2021-06-14T17:00:00Z</updated>
    <published>2021-06-14T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; JDK 17 перешёл в &lt;a href="https://mail.openjdk.java.net/pipermail/jdk-dev/2021-June/005690.html"&gt;первую фазу Rampdown&lt;/a&gt;. Это значит, что JDK 17 форкнут в отдельный &lt;a href="https://github.com/openjdk/jdk17"&gt;стабилизационный репозиторий&lt;/a&gt;, и в релиз больше не будут приниматься никакие новые JEP'ы.&lt;/p&gt;
&lt;p&gt;Кроме того, стало известно, что &lt;a href="https://openjdk.java.net/jeps/406"&gt;JEP 406: Pattern Matching for switch (Preview)&lt;/a&gt; был интегрирован в Java 17 и попал в последнюю сборку &lt;a href="http://jdk.java.net/17/"&gt;JDK 17-ea+26&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Также вышла первая сборка &lt;a href="http://jdk.java.net/18/"&gt;JDK 18-ea+1&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел новый черновик &lt;a href="http://openjdk.java.net/jeps/8261529"&gt;JEP: Universal Generics (Preview)&lt;/a&gt;. Это очередной JEP по проекту &lt;a href="http://openjdk.java.net/projects/valhalla/"&gt;Valhalla&lt;/a&gt;, и в нём предлагается расширить пространство всех переменных типов в дженериках до всех типов, то есть не только ссылочных типов, но и примитивных типов значений. Это означает, что для компилятора Java больше не будет ошибкой, если указать примитивы в качестве типов-параметров (например, List&amp;lt;int&amp;gt;). При этом, если в generic коде переменной типа будет присвоен &lt;code&gt;null&lt;/code&gt;, то компилятор будет выдавать предупреждение:&lt;/p&gt;
&lt;pre&gt;class C&amp;lt;T&amp;gt; {
    T x = null; &lt;span style="color: orange"&gt;// warning: null assignment&lt;/span&gt;
}&lt;/pre&gt;
&lt;p&gt;Таким образом, компилятор предупреждает разработчика о том, что может произойти &lt;code&gt;null&lt;/code&gt;-загрязнение, то есть если переменная &lt;code&gt;T&lt;/code&gt; окажется value-типом, то в ней будет находиться несовместимое значение, что в дальнейшем может привеcти к NullPointerException:&lt;/p&gt;
&lt;pre&gt;C&amp;lt;Point&amp;gt; c = new C&amp;lt;Point&amp;gt;();
Point p = c.x; &lt;span style="color: red"&gt;// NPE&lt;/span&gt;&lt;/pre&gt;
&lt;p&gt;Такая стратегия означает, что весь существующий код дженериков будет продолжать компилироваться, и лишь в некоторых местах будут предупреждения, которые сопроводитель кода сможет исправить постепенно.&lt;/p&gt;
&lt;p&gt;Важно отметить, что в данном JEP речи о специализации дженериков времени выполнения пока не идёт, и дженерики будут продолжать компилироваться в байткод через стирание типов (erasure), то есть во время выполнения дженерики с value-типами будут работать как ссылочные типы. JEP про специализацию будет опубликован в будущем.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; У инструмента &lt;code&gt;jar&lt;/code&gt;, который входит в состав JDK, появилась новая опция &lt;a href="https://github.com/openjdk/jdk/pull/3971"&gt;&lt;code&gt;--validate&lt;/code&gt;&lt;/a&gt;. Она служит для валидации &lt;a href="https://openjdk.java.net/jeps/238"&gt;multi-release JAR-файлов&lt;/a&gt;: делает анализ экспортированных API для каждой из декларированных версий Java и проверяет, что они согласованны. Такой анализ проводился и ранее при создании или обновлении JAR-файлов, но теперь его можно выполнить отдельным действием.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; В блоге JetBrains вышел &lt;a href="https://blog.jetbrains.com/idea/2021/06/java-annotated-monthly-june-2021/"&gt;Java Annotated Monthly за июнь 2021&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://spring.io/blog/2021/06/09/spring-framework-5-3-8-available-now"&gt;Spring Framework 5.3.8&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://docs.gradle.org/7.1/release-notes.html"&gt;Gradle 7.1&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #20</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_20.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_20.html</id>
    <updated>2021-06-05T17:00:00Z</updated>
    <published>2021-06-05T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Началась разработка Java 18. В репозитории GitHub &lt;a href="https://github.com/openjdk/jdk/pull/4175/commits"&gt;появился пулл-реквест&lt;/a&gt; со стандартными процедурами, которые проводятся при старте нового релиза: добавление новых констант с версиями, таблиц символов, заголовков в файлах и т.д. Новая версия формата class-файлов будет равна 62.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел новый черновик JEP, связанный с проектом &lt;a href="https://openjdk.java.net/projects/valhalla/"&gt;Valhalla&lt;/a&gt; и &lt;a href="https://openjdk.java.net/jeps/401"&gt;примитивными объектами&lt;/a&gt;: &lt;a href="http://openjdk.java.net/jeps/8267650"&gt;Better-defined JVM class file validation&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; В &lt;a href="https://openjdk.java.net/jeps/411"&gt;JEP 411: Deprecate the Security Manager for Removal&lt;/a&gt; были внесены &lt;a href="https://mail.openjdk.java.net/pipermail/jdk-dev/2021-May/005616.html"&gt;важные изменения&lt;/a&gt;. Значение свойства &lt;code&gt;java.security.manager&lt;/code&gt; всё-таки предлагается по умолчанию оставить равным &lt;code&gt;allow&lt;/code&gt;, а не &lt;code&gt;disallow&lt;/code&gt;, что означает, что при вызове &lt;a href="https://docs.oracle.com/en/java/javase/16/docs/api/java.base/java/lang/System.html#setSecurityManager(java.lang.SecurityManager)"&gt;&lt;code&gt;System.setSecurityManager()&lt;/code&gt;&lt;/a&gt; будет выводиться предупреждение в консоль, а не выбрасываться &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Таким образом, приложения, которые используют &lt;code&gt;setSecurityManager()&lt;/code&gt;, будут продолжать работать на Java 17 без изменений, что &lt;a href="https://blogs.apache.org/netbeans/entry/jep-411-deprecate-the-security1"&gt;облегчит&lt;/a&gt; их миграцию.&lt;/p&gt;
&lt;p&gt;Однако значение свойства &lt;code&gt;java.security.manager&lt;/code&gt; всё-таки станет равным &lt;code&gt;disallow&lt;/code&gt;, но это произойдёт в Java 18.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; В рассылке OpenJDK продолжается обсуждение темы &lt;a href="https://mail.openjdk.java.net/pipermail/valhalla-spec-experts/2021-June/001533.html"&gt;абстрактности класса Object&lt;/a&gt;. На данный момент предлагается следующее:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Будет введён новый метод &lt;code&gt;IdentityObject::newIdentity&lt;/code&gt; (Б.Гетц предлагает &lt;code&gt;Objects::newIdentity&lt;/code&gt;), который будет возвращать объект некоторого внутреннего класса, реализующего интерфейс &lt;code&gt;IdentityObject&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;JVM будет заменять вызовы &lt;code&gt;new Object()&lt;/code&gt; на создание объекта, реализующего &lt;code&gt;IdentityObject&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;javac будет заменять вызовы &lt;code&gt;new Object()&lt;/code&gt; на &lt;code&gt;IdentityObject.newIdentity()&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Такая стратегия позволит постепенно перейти от возможности вызова &lt;code&gt;new Object()&lt;/code&gt; до его полного запрета в будущем.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Программисты из Amazon предлагают порассуждать о возможности &lt;a href="https://mail.openjdk.java.net/pipermail/hotspot-compiler-dev/2021-May/047486.html"&gt;реализации Partial Escape Analysis&lt;/a&gt; в Hotspot.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышла &lt;a href="https://jakarta.ee/news/jakarta-ee-9-1-released/"&gt;Jakarta EE 9.1&lt;/a&gt; с поддержкой Java 11. Также вышел &lt;a href="https://github.com/eclipse-ee4j/glassfish/releases/tag/6.1.0"&gt;Eclipse GlassFish 6.1.0&lt;/a&gt;, который соответствует спецификации Jakarta EE 9.1.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://in.relation.to/2021/06/02/hibernate-orm-550-final-release/"&gt;Hibernate 5.5.0.Final&lt;/a&gt;. Вместе с обычными артефактами в пространстве имён &lt;code&gt;javax&lt;/code&gt; теперь появились аналогичные артефакты в пространстве имён &lt;code&gt;jakarta&lt;/code&gt;. Например, у Hibernate Core есть две версии: &lt;a href="https://search.maven.org/artifact/org.hibernate/hibernate-core/5.5.0.Final/jar"&gt;hibernate-core&lt;/a&gt; и &lt;a href="https://search.maven.org/artifact/org.hibernate/hibernate-core-jakarta/5.5.0.Final/jar"&gt;hibernate-core-jakarta&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышли новые ранние сборки JDK: &lt;a href="https://jdk.java.net/17/"&gt;JDK 17-ea+25&lt;/a&gt;, &lt;a href="https://jdk.java.net/loom/"&gt;JDK 17-loom+7&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://netbeans.apache.org/download/nb124/nb124.html"&gt;NetBeans 12.4&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышла &lt;a href="https://blog.jetbrains.com/idea/2021/06/intellij-idea-2021-1-2/"&gt;IntelliJ IDEA 2021.1.2&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://mail.openjdk.java.net/pipermail/jmh-dev/2021-May/003307.html"&gt;JMH 1.32&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #19</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_19.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_19.html</id>
    <updated>2021-05-22T17:00:00Z</updated>
    <published>2021-05-22T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Языку Java исполнилось 26 лет. 23 мая 1995 года компания Sun Microsystems впервые официально представила платформу Java, имевшую версию 1.0a2.&lt;/p&gt;
&lt;p&gt;В честь дня рождения будет проведён онлайн-марафон &lt;a href="https://nipafx.dev/26h-java/"&gt;"26 Hours of Java"&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Разработка &lt;a href="http://openjdk.java.net/projects/jdk/17/"&gt;Java 17&lt;/a&gt; идёт полным ходом, и количество JEP'ов в этом релизе прибавилось сразу на семь штук.&lt;/p&gt;
&lt;p&gt;Запланированы:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/412"&gt;JEP 412: Foreign Function &amp; Memory API (Incubator)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/414"&gt;JEP 414: Vector API (Second Incubator)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Предложены:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/306"&gt;JEP 306: Restore Always-Strict Floating-Point Semantics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/403"&gt;JEP 403: Strongly Encapsulate JDK Internals&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/406"&gt;JEP 406: Pattern Matching for switch (Preview)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/407"&gt;JEP 407: Remove RMI Activation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://openjdk.java.net/jeps/411"&gt;JEP 411: Deprecate the Security Manager for Removal&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; Брайан Гетц написал &lt;a href="https://mail.openjdk.java.net/pipermail/amber-spec-experts/2021-May/002996.html"&gt;письмо в рассылку OpenJDK&lt;/a&gt;, где он описал прогресс, которого в итоге удалось достигнуть в расширении возможностей оператора &lt;code&gt;switch&lt;/code&gt;. Он рассказал, каким образом удалось решить проблемы с тотальностью, проваливанием (fallthrough), областями видимости и &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышли новые ранние сборки JDK: &lt;a href="https://jdk.java.net/17/"&gt;JDK 17-ea+23&lt;/a&gt;, &lt;a href="https://jdk.java.net/panama/"&gt;JDK 17-panama+3&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Ещё один день рождения празднует &lt;a href="https://en.wikipedia.org/wiki/Hibernate_(framework)"&gt;Hibernate&lt;/a&gt;. Его первая версия вышла ровно 20 лет назад, 23 мая 2001 года.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышли новые версии Spring:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/05/20/spring-boot-2-5-is-now-ga"&gt;Spring Boot 2.5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/05/18/spring-security-5-5-goes-ga"&gt;Spring Security 5.5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/05/19/spring-integration-5-5-goes-ga"&gt;Spring Integration 5.5 и 5.4.7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/05/19/spring-batch-4-2-7-and-4-3-3-are-out"&gt;Spring Batch 4.2.7 и 4.3.3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/05/17/spring-amqp-2-2-17-releae-2-3-7-available"&gt;Spring AMQP 2.2.17 и 2.3.7&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/05/14/spring-ldap-2-3-4-released"&gt;Spring LDAP 2.3.4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://spring.io/blog/2021/05/14/spring-data-2021-0-1-and-2020-0-9-released"&gt;Spring Data 2021.0.1 and 2020.0.9&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://spockframework.org/spock/docs/2.0/release_notes.html"&gt;Spock 2.0&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://mail.openjdk.java.net/pipermail/jol-dev/2021-May/000369.html"&gt;JOL 0.16&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Новости Java #18</title>
    <link rel="alternate" type="text/html" href="https://minijug.ru/java_news_18.html" />
    <author>
      <name>Евгений Козлов</name>
    </author>
    <id>https://minijug.ru/java_news_18.html</id>
    <updated>2021-05-16T17:00:00Z</updated>
    <published>2021-05-16T17:00:00Z</published>
    <content type="html">&lt;p&gt;&amp;bull; Вышла &lt;a href="https://scala-lang.org/blog/2021/05/14/scala3-is-here.html"&gt;Scala 3&lt;/a&gt;. Это следующая версия языка, работа над которой велась более 8 лет более чем 100 разработчиками. В этот релиз попало 28 тысяч коммитов, 7400 пулл-реквестов и 4100 закрытых задач. Новый язык содержит в себе &amp;laquo;последние исследования в теории типов, так же как и индустриальный опыт Scala 2&amp;raquo;. Перечислим лишь некоторые изменения в новой версии:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Новый синтаксис &lt;a href="https://dotty.epfl.ch/docs/reference/other-new-features/control-syntax.html"&gt;без фигурных скобок&lt;/a&gt;. Индентация теперь имеет &lt;a href="https://dotty.epfl.ch/docs/reference/other-new-features/indentation.html"&gt;строгие правила&lt;/a&gt; и влияет на компиляцию.&lt;/li&gt;
  &lt;li&gt;Ключевое слово &lt;code&gt;new&lt;/code&gt; теперь &lt;a href="https://dotty.epfl.ch/docs/reference/other-new-features/creator-applications.html"&gt;опционально&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Implicit'ов больше нет, и теперь концепция разделена на несколько независимых частей, каждая из которых заточена под свои конкретные вещи: &lt;a href="https://dotty.epfl.ch/docs/reference/contextual/using-clauses.html"&gt;условия using&lt;/a&gt;, &lt;a href="https://dotty.epfl.ch/docs/reference/contextual/givens.html"&gt;given-инстансы&lt;/a&gt;, &lt;a href="https://dotty.epfl.ch/docs/reference/contextual/extension-methods.html"&gt;extension-методы&lt;/a&gt;, &lt;a href="https://dotty.epfl.ch/docs/reference/contextual/conversions.html"&gt;неявные конверсии&lt;/a&gt;, &lt;a href="https://dotty.epfl.ch/docs/reference/contextual/context-functions.html"&gt;контекстные функции&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dotty.epfl.ch/docs/reference/enums/enums.html"&gt;Перечисления&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dotty.epfl.ch/docs/reference/new-types/intersection-types.html"&gt;Пересечения&lt;/a&gt; и &lt;a href="https://dotty.epfl.ch/docs/reference/new-types/union-types.html"&gt;объеденения&lt;/a&gt; типов.&lt;/li&gt;
  &lt;li&gt;Типы функций, &lt;a href="https://dotty.epfl.ch/docs/reference/new-types/dependent-function-types.html"&gt;зависящие от параметров&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://dotty.epfl.ch/docs/reference/new-types/match-types.html"&gt;match-типы&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;trait'ы теперь &lt;a href="https://dotty.epfl.ch/docs/reference/other-new-features/trait-parameters.html"&gt;могут иметь параметры&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Классы, от которых можно наследоваться, теперь должны иметь &lt;a href="https://dotty.epfl.ch/docs/reference/other-new-features/open-classes.html"&gt;модификатор &lt;code&gt;open&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Подробный список новых возможностей и улучшений в Scala 3 можно найти &lt;a href="https://docs.scala-lang.org/scala3/new-in-scala3.html"&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел новый черновик &lt;a href="http://openjdk.java.net/jeps/8266010"&gt;JEP: Reimplement Core Reflection on Method Handles&lt;/a&gt;. В нём предлагается реализовать рефлексию в Java поверх method handles, тем самым избавившись от одной лишней реализации рефлективного механизма, которые дублируют друг друга. Это уменьшит затраты на поддержку и разработку API в пакетах &lt;code&gt;java.lang.reflect&lt;/code&gt; и &lt;code&gt;java.lang.invoke&lt;/code&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; На сайте OpenJDK впервые появились &lt;a href="https://jdk.java.net/17/"&gt;сборки JDK под Apple M1&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; JetBrains объявил &lt;a href="https://blog.jetbrains.com/kotlin/2021/05/kotlin-1-5-online-event/"&gt;Kotlin Online Event&lt;/a&gt; в честь выхода Kotlin 1.5. Он состоится 25 мая.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышла &lt;a href="https://github.com/scala/scala/releases/tag/v2.13.6"&gt;Scala 2.13.6&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышли &lt;a href="https://spring.io/blog/2021/05/11/spring-framework-5-3-7-and-5-2-15-available-now"&gt;Spring Framework 5.3.7 и 5.2.15&lt;/a&gt;.&lt;/p&gt;

&lt;p class="pt-2"&gt;&amp;bull; Вышел &lt;a href="https://mail.openjdk.java.net/pipermail/jmh-dev/2021-May/003286.html"&gt;JMH 1.31&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
</feed>
